{"version":3,"sources":["api/fetchWeather.js","App.jsx","reportWebVitals.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAKaA,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEY,uBAClBC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,sD,eC+CVC,EA/CH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTV,EADS,KACFW,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,KAIVC,EAAM,uCAAG,WAAMC,GAAN,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAIXK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASZ,OACE,sBAAKM,UAAU,iBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,YACZC,MAAOpB,EACPqB,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,QACjCG,WAAYT,IAEbF,EAAQY,MACP,sBAAKP,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOL,EAAQa,OACf,8BAAMb,EAAQc,IAAIC,aAEpB,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAEF,sBAAKb,UAAU,OAAf,UACE,qBACEA,UAAU,YACVc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WACHC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAE1B,4BAAItB,EAAQA,QAAQ,GAAGsB,wBChCpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5535d4e2.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather'\nconst API_KEY = '6e676365032977eaa1e8914b3a37fda0'\n\nexport const fetchWeather = async query => {\n  const { data } = await axios.get(URL, {\n    params: {\n      q: query,\n      units: 'metric',\n      APPID: API_KEY\n    }\n  })\n\n  return data\n}\n","import React, { useState } from 'react'\n\nimport { fetchWeather } from './api/fetchWeather'\nimport './App.css'\n\nconst App = () => {\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] = useState({})\n\n  const search = async e => {\n    if (e.key === 'Enter') {\n      const data = await fetchWeather(query)\n\n      setWeather(data)\n      setQuery('')\n    }\n  }\n\n  return (\n    <div className='main-container'>\n      <input\n        type='text'\n        className='search'\n        placeholder='Search...'\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        onKeyPress={search}\n      />\n      {weather.main && (\n        <div className='city'>\n          <h2 className='city-name'>\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className='city-temp'>\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className='info'>\n            <img\n              className='city-icon'\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}